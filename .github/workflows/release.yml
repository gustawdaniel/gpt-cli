name: Release

on:
  release:
    types: [ created ]

jobs:
  release-archives:
    name: release ${{ matrix.target }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          # - target: wasm32-wasi
          #   archive: tar.gz
          # - target: x86_64-pc-windows-gnu
          #   archive: zip
          - target: x86_64-unknown-linux-musl
            archive: tar.gz tar.xz tar.zst
          - target: x86_64-apple-darwin
            archive: zip
    steps:
      - uses: actions/checkout@master

      - name: Install clipboard deps
        run: |
          if [[ "${{ matrix.target }}" == "x86_64-unknown-linux-musl" ]]; then
            sudo apt update
            sudo apt install -y xorg-dev libxcb-composite0-dev libxcb-render0-dev libxcb-shape0-dev libxcb-xfixes0-dev
          elif [[ "${{ matrix.target }}" == "x86_64-apple-darwin" ]]; then
            /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
            brew install xcb-proto libxcb
          else
            echo "Unknown target: ${{ matrix.target }}"
            exit 1
          fi

      - name: Compile
        id: compile
        uses: rust-build/rust-build.action@v1.4.3
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        with:
          RUSTTARGET: ${{ matrix.target }}
          EXTRA_FILES: "README.md LICENSE"
          ARCHIVE_TYPES: ${{ matrix.archive }}

  release-binary:
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master

      - name: Install clipboard deps
        run: sudo apt install xorg-dev libxcb-composite0-dev

      - name: Build linux binary
        id: build
        run: cargo build --release

      - run: cp target/release/gpt-cli gpt-cli

      - name: Test
        run: ls gpt-cli

      - name: Release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        with:
          files: |
            gpt-cli

      - name: Get release ID
        run: echo "The release ID is ${{ github.event.release.id }}"

      - name: Update fallback release URL
        run: |
          sed -i "s|FALLBACK_RELEASE_URL=.*|FALLBACK_RELEASE_URL=https://api.github.com/repos/gustawdaniel/gpt-cli/releases/${{ github.event.release.id }}|" install.sh

      - name: Commit changes
        uses: EndBug/add-and-commit@v9
        with:
          author_name: Daniel Gustaw
          author_email: gustaw.daniel@gmail.com
          message: 'updated fallback release url'
          add: 'install.sh'

#  release-plz:
#    permissions:
#      pull-requests: write
#      contents: write
#    name: Release-plz
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout repository
#        uses: actions/checkout@v3
#        with:
#          fetch-depth: 0
#      - name: Install Rust toolchain
#        uses: dtolnay/rust-toolchain@stable
#      - name: Run release-plz
#        uses: MarcoIeni/release-plz-action@v0.4
#        with:
#          command: release
#        env:
#          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
#          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}