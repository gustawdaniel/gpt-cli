name: Test

on:
  push:
    branches-ignore:
      - ''  # Exclude main branch if needed
    tags-ignore:
      - '' # Exclude annotated tags if needed
  pull_request:
    branches-ignore:
      - ''  # Exclude main branch if needed
    tags-ignore:
      - '' # Exclude annotated tags if needed

env:
  CARGO_TERM_COLOR: always

jobs:
  unit:
    runs-on: ubuntu-latest
#
#    steps:
#      - uses: actions/checkout@v3
#      - name: Build
#        run: cargo build --verbose
#      - name: Run tests on main
#        run: cargo test --verbose


    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          profile: minimal
          components: rustfmt, clippy
          override: true

#      - name: Cache cargo
#        uses: actions/cache@v2
#        with:
#          path: |
#            ~/.cargo/registry
#            ~/.cargo/git
#            target
#          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
#
#      - name: Run tests and generate coverage
#        run: |
#          export CARGO_INCREMENTAL=0
#          export RUSTFLAGS="-Zinstrument-coverage"
#          LLVM_PROFILE_FILE="gpt-cli-%p-%m.profraw" cargo test
#          zip -0 ccov.zip `find . \( -name "gpt-cli*.gc*" \) -print`
#          grcov ccov.zip -s . -t lcov --llvm --branch --ignore-not-existing --ignore "/*" -o lcov.info
#          bash <(curl -s https://codecov.io/bash) -f lcov.info
#
      - name: Build
        run: cargo build --verbose
      - name: Run tests
        run: cargo test --verbose
        env:
          CARGO_INCREMENTAL: '0'
          RUSTFLAGS: '-Zprofile -Ccodegen-units=1 -Cinline-threshold=0 -Clink-dead-code -Coverflow-checks=off -Cpanic=abort -Zpanic_abort_tests'
          RUSTDOCFLAGS: '-Zprofile -Ccodegen-units=1 -Cinline-threshold=0 -Clink-dead-code -Coverflow-checks=off -Cpanic=abort -Zpanic_abort_tests'
      - name: rust-grcov
        # You may pin to the exact commit or the version.
        # uses: actions-rs/grcov@bb47b1ed7883a1502fa6875d562727ace2511248
        uses: actions-rs/grcov@v0.1.5
      - name: Codecov
        # You may pin to the exact commit or the version.
        # uses: codecov/codecov-action@81cd2dc8148241f03f5839d295e000b8f761e378
        uses: codecov/codecov-action@v3.1.0
        with:
          # Repository upload token - get it from codecov.io. Required only for private repositories
          # token: # optional
          # Specify whether the Codecov output should be verbose
          verbose: true
          fail_ci_if_error: true

      - name: Run Clippy
        run: cargo clippy --all-features -- -D warnings

      - name: Check formatting
        run: cargo fmt --all -- --check
#
#      - name: Upload coverage reports to Codecov
#        uses: codecov/codecov-action@v3